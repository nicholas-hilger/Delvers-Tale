<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_playTest</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>s_playTest</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mHp = 6
hp = mHp
mAp = 50
ap = mAp
def = 3
att = 4
gold = 0

xp = 0
mXp = 65

spd = 4
attacking = 0
combo = 0
maxCombo = 5

lightRange = 3

curMusic = 0

lvl = 1

returnX = x
returnY = y

hurting = 0
hitsMod = "Passable"
hits = 0
hitTimer = 0
hitsXp = 0
scoreMod = 1

mp = 0
keys = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(hp &gt; mHp) hp = mHp

if(attacking != 0) attacking--
if(hurting != 0) hurting--

if(attacking = 0) combo = 0

if(hitTimer &gt; 0) hitTimer--
if(hits &gt; 0 and hitTimer = 0) hits-= 0.2
if(hits &gt;= 100) hits = 100

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room != room0)
{
upKey = keyboard_check(vk_up)
downKey = keyboard_check(vk_down)
rightKey = keyboard_check(vk_right)
leftKey = keyboard_check(vk_left)
attKey = keyboard_check_pressed(ord("Z"))
}
else if(room = room0)
{
upKey = keyboard_check_pressed(vk_up)
downKey = keyboard_check_pressed(vk_down)
rightKey = keyboard_check_pressed(vk_right)
leftKey = keyboard_check_pressed(vk_left)
}

devKey = keyboard_check_pressed(ord("Q"))

if(devKey) 
{
//hp -= 10
hp--
gold += 5
}

if(keyboard_check_pressed(ord("R")) and room = room0)
{
room_persistent = false
room_restart()
x = startRoom.x
y = startRoom.y
motion_set(0,0)
}
if(keyboard_check_pressed(vk_escape)) game_end()

if(room = room0)
{
if(speed = 0 and !instance_exists(lvlGen))
{
if(upKey)
{
if((place_meeting(x,y-64,corridor) and instance_place(x,y-64,corridor).up) or (place_meeting(x,y-64,roomPar))) motion_set(90,8)
}
if(downKey)
{
if((place_meeting(x,y+64,corridor) and instance_place(x,y+64,corridor).up) or (place_meeting(x,y+64,roomPar))) motion_set(270,8)
}
if(rightKey)
{
if((place_meeting(x+64,y,corridor) and !instance_place(x+64,y,corridor).up) or (place_meeting(x+64,y,roomPar))) motion_set(0,8)
}
if(leftKey)
{
if((place_meeting(x-64,y,corridor) and !instance_place(x-64,y,corridor).up) or (place_meeting(x-64,y,roomPar))) motion_set(180,8)
}
}
if(instance_exists(lvlGen)) room_speed = 300
else room_speed = 60
}

if(room != room0)
{
if(attacking &lt;= 5)
{
if(upKey and !place_meeting(x,y-spd/2,wall)) y -= spd/2
if(downKey and !place_meeting(x,y+spd/2,wall)) y += spd/2
if(rightKey and !place_meeting(x+spd,y,wall)) x += spd
if(leftKey and !place_meeting(x-spd,y,wall)) x -= spd
}
if(attKey and attacking &lt;= 10)
{
instance_create(x+(12*image_xscale),y,slash)
combo++
if(combo = maxCombo)
{
attacking = 45
}
else 
{
attacking = 15
}
if(!place_meeting(x+(2*image_xscale),y,wall)) x += (2*image_xscale)
}
}

if(room = room0) mask_index = s_playTest
else mask_index = s_battleMask

if(!audio_is_playing(curMusic) and !instance_exists(lvlGen)) chooseMusic()
if(hits &lt; 10) hitsMod = "Tame"
if(hits &gt;= 10) hitsMod = "Harsh"
if(hits &gt;= 30) 
{
hitsMod = "Violent"
scoreMod = 2
}
if(hits &gt;= 50)
{
hitsMod = "Brutal"
scoreMod = 3
}
if(hits &gt;= 70)
{
hitsMod = "Mythic"
scoreMod = 4
}
if(hits &gt;= 90)
{
hitsMod = "Divine"
scoreMod = 5
}

if(attacking = 20) combo = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="corridor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other) discovered = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="roomPar">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_set(0,0)
if(!other.done)
{
with(other) done = 1
if(other.type = 1)
{
returnX = x
returnY = y
room_goto(smallBattle)
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_size(1920,1080)
if(instance_exists(lvlGen))
{
draw_set_color(c_black)
draw_rectangle(0,0,1920,1080,0)
draw_set_color(c_white)
draw_set_font(testFont)
draw_set_halign(fa_center)
draw_set_valign(fa_center)
genPct = round((instance_number(roomPar) / 18) * 100)
draw_text((1920/2),(1080/2),"Generating#(" + string(genPct) + "%)")
}
if(room != room0)
{
draw_set_color(c_black)
draw_rectangle(0,0,1920,120,0)
draw_set_color(c_white)
for(i = 0; i &lt; mHp; i++) draw_sprite(s_hpBack,0,150+(24*i),20)
for(i = 0; i &lt; hp; i++) draw_sprite(s_hp,0,150+(24*i),20)
draw_set_font(statFont)
draw_set_halign(fa_left)
draw_set_valign(fa_top)
draw_set_color(c_white)
draw_text(5,10,"VITAL")
draw_text(5,70,"SCORE " + string(score)) 
draw_sprite(s_specialSlot,0,960,50)
draw_sprite(s_monIcon,0,1026,21)
draw_sprite(s_manaIcon,0,1026,54)
draw_sprite(s_key,0,1026,87)
draw_set_font(itemFont)
draw_text(1040,16,"x" + string(gold))
draw_text(1040,48,"x" + string(mp))
draw_text(1040,80,"x" + string(keys))


draw_set_font(statFont)
draw_set_halign(fa_left)
draw_text(1600,10,hitsMod)
if(hits &gt;= 30) draw_text(1600,80,string(scoreMod) + "x SCORE")
comboColor= c_blue
if(hits &gt;= 10) comboColor = c_maroon
if(hits &gt;= 30) 
{
comboColor = c_green
}
if(hits &gt;= 50)
{
comboColor = c_red
}
if(hits &gt;= 70)
{
comboColor = c_orange
}
if(hits &gt;= 90)
{
comboColor = c_yellow
}
if(hits &lt; 100) draw_sprite_ext(s_comboBar,0,1600,52,hits/100,1,0,comboColor,1)
else draw_sprite_ext(s_comboBar,0,1600,52,1,1,0,comboColor,1)
draw_sprite(s_comboFront,0,1600,52)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room = room0)
{
if(speed &gt; 0)
{
if(x &lt; xprevious) image_xscale = -1
else if(x &gt; xprevious) image_xscale = 1
}
if(speed != 0) image_speed = 0.2
else 
{
image_index = 0
image_speed = 0
}
}
else
{
if(x &lt; xprevious) image_xscale = -1
else if(x &gt; xprevious) image_xscale = 1
if(x != xprevious or y != yprevious) image_speed = 0.2
else
{
image_speed = 0
image_index = 0
}
}
//draw_text(x,y-64,combo)
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
